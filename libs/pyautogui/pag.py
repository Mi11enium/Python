import pyautogui as pag

# Координаты и экран
# position()  # Получение координат мыши # Point(x=3723, y=440)
# size()  # Вывод координатов всего размера экрана ## Size(width=2560, height=1600)
# onScreen(x, y)  # Проверка существования точек на экране ## True or False 
# screenshot('img.png)  # создание скриншота
# locateOnScreen('pathToImg')  # Возвращает координаты найденного изображения (l, t, w, h)
# locateCenterOnScreen('pathToImg')  # Возвращает центр x и y найденного изображения, иначе None

# Задание координатов региона для поиска изображения (части экрана) https://www.youtube.com/watch?v=6c4Fj7WL-Jg
# Выписывам первую часть (x,y) - она будет являться верхним левым углом
# Выписывам вторую часть (width, height) - она будет являться правым нижним углом
# Для вписывания width/height, после получения координат, для region его нужно
# пересчитать в столбик снизу-вверх
# Width - x, Height - y
# x, y = 1000, 800
# width, height = 1300, 1000
# 1300 - 1000 = 300; 1000 - 800 = 200
# Итого region(1000, 800, 300, 200)

# Задание координатов региона для распознавания текста
# Нужно пытаться максимально приблизиться к границам текста
# Подход в подборе такой же как в region


# Клавиатура
# press('key', presses = 1) - нажатие клавиши
# write('text') - написание текста не месте курсора
# hotkey('key1', 'key2', key3') - одновременное нажатие клавиш (горячие) 'ctrl', 'c'; 'ctrl, 'v'
# keyDown('key')  # опускание клавиши
# keyUp('key')  # поднятие клавиши
# typewrite('text)  # аналог write
# KEYBOARD_KEYS  # список горячих клавиш


# Мышь
# x и y счиается с левого верхнего угла! При этом y при опускании вниз положительно, а не отрицательно!
# moveTo(x,y) - перемещение курсора
# scroll(anount_to_scroll, x, y)  # скролл мышью
# click()  # клик мышью
# dragTo(x_endcoord, y_endcoord)  # от положения курсора: нажатие, удерживание, отпускание end
# mouseDown(x, y, button='')  # Зажатие мыши
# mouseUp(x, y, button='')  # Отпускание мыши


# Окна
# confirm("Готовы?")  # Ok, calcel
# alert("Ошибка")  # Error
# prompt("Введите имя: ")  # Input


# Конструкции
# with
# Завершение кода после его выполнения внутри тела
with pag.hold('shift'):
    pag.press(['a'])

# Системные
# FAILSAFE = True  # Прекращение программы при выходе курсора за диапаз


# Прочие замечания
# Если у нас местоположение неизменяемо, то мы можем использовать определение по RGB цвету пикселя в обозначенной зоне
# если изменяемо, то используем поиск по изображению