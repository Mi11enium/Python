# Основные операторы сравнения
# >, <, <=, >=, ==, !=


# Основные логические операторы
# not(1), and(2), or(3) ## цифры - приоритет
# Для явного указания порядка выполнения условных операторов используют скобки.


# Оператор in
# Оператор in в Python используется для проверки наличия элемента в последовательности (например, списке, строке, кортеже).
# он позволяет определить, входит ли указанное значение в указанную последовательность.
# Логика:
# Оператор in используется для поиска элемента в коллекции (последовательности) данных.
# Он помогает ответить на вопрос: "Является ли данный элемент частью этой группы?"
# Проверка с использованием оператора in чувствительна к регистру.

# Запоминание и логика
# Оператор in имеет следующую структуру: элемент('apple') содержится в(in) последовательность(fruits).

# При использовании операторов or или and вместе с in, к каждой операнде нужно обязательно подставлять in

# Пример из реального мира:
# Предположим, у вас есть список покупок, и вы хотите проверить, есть ли в нем молоко.
# Вы можете использовать оператор in для быстрого поиска:
shopping_list = ["хлеб", "молоко", "яблоки", "соль"]

if "молоко" in shopping_list:
    print("Молоко в списке покупок. Не забудь купить!")
else:
    print("Молока в списке нет.")